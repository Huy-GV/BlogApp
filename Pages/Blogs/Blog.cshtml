@page
@model BlogApp.Pages.Blogs.BlogModel
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["CSSLink"] = "/css/blog.css";
    ViewData["Shared"] = "/css/shared.css";
    ViewData["Script"] = "/js/blog.js";
    IdentityUser user = (await UserManager.GetUserAsync(User));
}




<a asp-page="./Index" class="menu-button">Back to menu</a>
<div class="blog-container">
    <div class="blog">
        <span class="title">@Model.Blog.Title</span>
        <span>@Model.Blog.Date.ToString("dd-MM-yyyy")</span>
        <span class="blog-author">@Model.Blog.Author</span>
        <div class="comment-button-container">
            @{
                if (user != null)
                {
                    var userRoles = await UserManager.GetRolesAsync(user);
                    if ((user.UserName == Model.Blog.Author) || userRoles.Contains(Roles.AdminRole))
                    {
                        <form asp-page-handler="DeleteBlog" asp-route-blogID="@Model.Blog.ID" method="get">
                            <button class="delete-post">Delete</button>
                        </form>
                    }
                    if (user.UserName == Model.Blog.Author)
                    {
                        <span><button class="edit-post">Edit</button></span>
                        <form asp-page-handler="EditBlog"
                              asp-route-blogID="@Model.Blog.ID"
                              method="post"
                              class="hidden-element edit-blog-form">
                            <input asp-for="EditBlogForm.Content" value="@Model.Blog.Content" />
                            <input type="submit" value="Save" class="save-btn" />
                        </form>
                    }
                }

            }
        </div>
        <p class="blog-content">@Model.Blog.Content</p>
        </div>
    </div>

<div class="add-comment-button-container"><a class="comment-button">Add a comment</a></div>

<form method="post" class="comment-form hidden-element">
    <input asp-for="InputComment.BlogID" value="@Model.Blog.ID" type="hidden" />
    <input asp-for="InputComment.Content" placeholder="Type your comment">
    <button class="cancel-comment" type="button">Cancel</button>
    <input type="submit" value="Post" class="submit-comment"/>
</form>

<div class="comment-container">
    @foreach (var comment in Model.Blog.Comments)
    {
    <div class="comment" data-id="@comment.ID">
        @{
            if (comment.Author == Model.Blog.Author)
            {
                <span class="blog-author">@comment.Author</span>
            }
            else
            {
                <span class="comment-author">@comment.Author</span>
            }
        }
        
        <div class="comment-button-container">
        @if (user != null)
            {
                var userRoles = await UserManager.GetRolesAsync(user);
                if (comment.Author == user.UserName || userRoles.Contains(Roles.AdminRole))
                {
                        <form asp-page-handler="DeleteComment"
                              asp-route-commentID="@comment.ID"
                              method="post">
                            <button class="delete-comment">Delete</button>
                        </form>
                }
                if (comment.Author == user.UserName)
                {
                    <button class="edit-comment" data-id="@comment.ID">Edit</button>
                    <form asp-page-handler="EditComment"
                          asp-route-commentID="@comment.ID"
                          data-id="@comment.ID"
                          method="post"
                          class="hidden-element edit-comment-form">
                        <input asp-for="EditComment.Content" value="@comment.Content" />
                        <input type="submit" value="Save" class="save-btn" />
                    </form>
                }
            }
        </div>
        <p class="comment-text">@comment.Content</p>
    </div>
    }

</div>

